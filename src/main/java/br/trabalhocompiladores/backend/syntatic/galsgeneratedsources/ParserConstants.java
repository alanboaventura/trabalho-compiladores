package br.trabalhocompiladores.backend.syntatic.galsgeneratedsources;

public interface ParserConstants {

    int START_SYMBOL = 49;

    int FIRST_NON_TERMINAL = 49;
    int FIRST_SEMANTIC_ACTION = 90;

    int[][] PARSER_TABLE = {
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, 6, 7, -1, -1, 5, -1, -1, -1, 4, -1, -1, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, 9, 9, -1, -1, 9, -1, -1, -1, 9, -1, -1, -1, -1, -1, 9, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, 12, 12, -1, -1, 12, -1, -1, -1, 12, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, 15, 15, -1, -1, 15, -1, -1, -1, 15, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, 18, 18, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, 22, -1, -1, -1, -1, -1, -1, 22, 22, -1, -1, 22, -1, -1, -1, 22, -1, -1, -1, -1, 22, 22, -1, -1, -1, -1, 22, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22},
            {-1, 23, -1, -1, -1, -1, -1, -1, 24, 24, -1, -1, 24, -1, -1, -1, 24, -1, -1, -1, -1, 23, 24, -1, -1, -1, -1, 23, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23},
            {-1, -1, -1, -1, -1, -1, -1, -1, 25, 25, -1, -1, 25, -1, -1, -1, 25, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, 26, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26},
            {-1, 27, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, 27, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27},
            {-1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, 31, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33},
            {-1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, 37, 38, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, 42, 42, 42, 42, 42, -1, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, 42, -1, -1, -1, 42, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, 42, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49},
            {-1, 50, 50, 50, 50, 50, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, -1, 50, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, 50, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, -1, 53, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 53, -1, -1, -1, -1, -1, -1},
            {-1, 54, 54, 54, 54, 54, -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, -1, -1, 57, -1, -1, -1, 55, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, 54, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, 58, 58, 58, 58, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, -1, -1, -1, -1, -1, -1, -1, 58, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, 60, 59, 59, 59, 59, 59, 59, -1, -1, -1, -1, 60, 60, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, 62, 63, 64, 65, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, 67, 67, 67, 67, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67, -1, -1, -1, -1, -1, -1, -1, 67, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, -1, 70, 70, 70, 70, 70, 70, 70, 68, 69, -1, -1, 70, 70, -1, -1, -1, -1, -1, -1},
            {-1, 71, 71, 71, 71, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, 71, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, 74, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 74, -1, -1, -1, -1, -1, -1, -1, -1, 74, 74, 74, 74, 74, 74, 74, 74, 74, 72, 73, 74, 74, -1, -1, -1, -1, -1, -1},
            {-1, 75, 76, 77, 78, 79, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 80, -1, -1, -1, -1, -1, -1, -1, 81, 82, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, 84, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 84, -1, -1, -1, -1, -1, -1, -1, 83, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, -1, -1, -1, -1, -1, -1},
            {-1, 86, 86, 86, 86, 86, -1, -1, -1, -1, -1, 86, -1, -1, -1, -1, -1, -1, -1, 86, -1, -1, -1, 86, -1, -1, -1, -1, 86, 85, -1, -1, -1, -1, -1, -1, 86, 86, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}
    };

    int[][] PRODUCTIONS = {
            {18, 50, 59, 8, 61, 11},
            {0},
            {51, 50},
            {14, 19, 53, 2, 29, 54, 30},
            {17},
            {13},
            {9},
            {10},
            {23},
            {52},
            {25},
            {0},
            {56, 55},
            {43, 56, 55},
            {0},
            {52, 44, 57},
            {2, 58},
            {41, 57},
            {0},
            {0},
            {60, 59},
            {19, 2, 8, 61, 11},
            {62, 64},
            {0},
            {63, 62},
            {52, 44, 57, 42},
            {66, 42, 65},
            {64},
            {0},
            {67},
            {69},
            {70},
            {29, 75, 30, 88},
            {74},
            {16, 64, 73, 11},
            {89},
            {2, 68, 75},
            {46},
            {47},
            {45},
            {22, 29, 57, 30},
            {28, 29, 71, 30},
            {75, 72},
            {41, 71},
            {0},
            {0},
            {15, 64},
            {27, 64, 11},
            {26, 64, 11},
            {48, 75},
            {77, 76},
            {7, 77, 42},
            {21, 77, 42},
            {0},
            {78},
            {24},
            {12},
            {20, 77},
            {81, 79},
            {80, 81},
            {0},
            {31},
            {32},
            {33},
            {34},
            {35},
            {36},
            {83, 82},
            {37, 83, 82},
            {38, 83, 82},
            {0},
            {85, 84},
            {39, 85, 84},
            {40, 85, 84},
            {0},
            {2, 86},
            {3},
            {4},
            {5},
            {6},
            {29, 75, 30},
            {37, 85},
            {38, 85},
            {29, 87},
            {0},
            {30},
            {71, 30}
    };

    String[] PARSER_ERROR = {
            "",
            "Era esperado fim de programa",
            "Era esperado id",
            "Era esperado constInt",
            "Era esperado constReal",
            "Era esperado constStr",
            "Era esperado constCarac",
            "Era esperado and",
            "Era esperado begin",
            "Era esperado bool",
            "Era esperado char",
            "Era esperado end",
            "Era esperado false",
            "Era esperado float",
            "Era esperado forward",
            "Era esperado ifFalseDo",
            "Era esperado ifTrueDo",
            "Era esperado int",
            "Era esperado main",
            "Era esperado module",
            "Era esperado not",
            "Era esperado or",
            "Era esperado read",
            "Era esperado string",
            "Era esperado true",
            "Era esperado void",
            "Era esperado whileFalseDo",
            "Era esperado whileTrueDo",
            "Era esperado write",
            "Era esperado \"(\"",
            "Era esperado \")\"",
            "Era esperado \"==\"",
            "Era esperado \"!=\"",
            "Era esperado \"<\"",
            "Era esperado \"<=\"",
            "Era esperado \">\"",
            "Era esperado \">=\"",
            "Era esperado \"+\"",
            "Era esperado \"-\"",
            "Era esperado \"*\"",
            "Era esperado \"/\"",
            "Era esperado \",\"",
            "Era esperado \".\"",
            "Era esperado \";\"",
            "Era esperado \":\"",
            "Era esperado \"=\"",
            "Era esperado \"+=\"",
            "Era esperado \"-=\"",
            "Era esperado \"^\"",
            "<programa> inválido",
            "<declarações> inválido",
            "<declaração> inválido",
            "<tipo> inválido",
            "<tipoMódulo> inválido",
            "<parâmetrosFormais> inválido",
            "<parâmetrosFormaisMais> inválido",
            "<parâmetro> inválido",
            "<listaDeIdentificadores> inválido",
            "<listaDeIdentificadores1> inválido",
            "<módulos> inválido",
            "<módulo> inválido",
            "<corpo> inválido",
            "<declaraçõesDeVariáveis> inválido",
            "<variável> inválido",
            "<listaDeComandos> inválido",
            "<listaDeComandos1> inválido",
            "<comando> inválido",
            "<comandoDeAtribuição> inválido",
            "<atribuir> inválido",
            "<entradaDeDados> inválido",
            "<saídaDeDados> inválido",
            "<listaDeExpressões> inválido",
            "<listaDeExpressões1> inválido",
            "<senao> inválido",
            "<retornoDeMódulo> inválido",
            "<expressão> inválido",
            "<expressão1> inválido",
            "<elemento> inválido",
            "<relacional> inválido",
            "<relacional1> inválido",
            "<operador_relacional> inválido",
            "<aritmética> inválido",
            "<aritmética1> inválido",
            "<termo> inválido",
            "<termo1> inválido",
            "<fator> inválido",
            "<fator1> inválido",
            "<fator11> inválido",
            "<comando1> inválido",
            "<expressãoComandoDeRepetição> inválido"
    };
}
